name: Cypress Tests with Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permet de lancer le workflow manuellement

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Récupérer l'historique précédent depuis gh-pages
      - name: Download history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev allure-cypress allure-commandline
          npx cypress verify
      
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-
      
      # Préparer correctement la structure pour l'historique Allure
      - name: Prepare Allure history
        if: always()
        run: |
          mkdir -p allure-results/history
          if [ -d "gh-pages/history" ]; then
            cp -R gh-pages/history/* allure-results/history/
          fi
      
      - name: Run Cypress tests
        run: npm run cypress:run
        continue-on-error: true  # Continuer même si les tests échouent
      
      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          allure_report: allure-report
          # Assurez-vous que cela pointe vers le bon dossier pour l'historique
          allure_history: allure-history
          keep_reports: 20
          github_run_num: ${{ github.run_number }}
          github_run_id: ${{ github.run_id }}
          allure_generate_args: '--clean'
      
      # Copier l'historique généré vers le dossier approprié pour la publication
      - name: Copy history for next run
        if: always()
        run: |
          mkdir -p allure-history/history
          cp -R allure-report/history/* allure-history/history/
      
      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report/
          retention-days: 30
      
      # Déployer sur GitHub Pages avec une structure correcte
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always() && github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: .
          publish_branch: gh-pages
          force_orphan: false  # Garantit que l'historique de la branche gh-pages est préservé